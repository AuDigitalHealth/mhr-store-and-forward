// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DigitalHealth.StoreAndForward.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Document model.
    /// </summary>
    public partial class DocumentModel
    {
        /// <summary>
        /// Initializes a new instance of the DocumentModel class.
        /// </summary>
        public DocumentModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DocumentModel class.
        /// </summary>
        /// <param name="data">Document data.</param>
        /// <param name="id">Document ID.</param>
        /// <param name="documentId">Document OID.</param>
        /// <param name="replaceId">Document replace ID.</param>
        /// <param name="queueDateTime">Document queue date time.</param>
        /// <param name="status">Document status.</param>
        /// <param name="documentLink">Document link.</param>
        /// <param name="eventsLink">Events link.</param>
        /// <param name="formatCode">Format code.</param>
        /// <param name="formatCodeName">Format code name.</param>
        /// <param name="ihi">IHI.</param>
        public DocumentModel(byte[] data = default(byte[]), int? id = default(int?), string documentId = default(string), string replaceId = default(string), System.DateTime? queueDateTime = default(System.DateTime?), string status = default(string), string documentLink = default(string), string eventsLink = default(string), string formatCode = default(string), string formatCodeName = default(string), string ihi = default(string))
        {
            Data = data;
            Id = id;
            DocumentId = documentId;
            ReplaceId = replaceId;
            QueueDateTime = queueDateTime;
            Status = status;
            DocumentLink = documentLink;
            EventsLink = eventsLink;
            FormatCode = formatCode;
            FormatCodeName = formatCodeName;
            Ihi = ihi;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets document data.
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public byte[] Data { get; set; }

        /// <summary>
        /// Gets or sets document ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or sets document OID.
        /// </summary>
        [JsonProperty(PropertyName = "document_id")]
        public string DocumentId { get; set; }

        /// <summary>
        /// Gets or sets document replace ID.
        /// </summary>
        [JsonProperty(PropertyName = "replace_id")]
        public string ReplaceId { get; set; }

        /// <summary>
        /// Gets or sets document queue date time.
        /// </summary>
        [JsonProperty(PropertyName = "queue_date_time")]
        public System.DateTime? QueueDateTime { get; set; }

        /// <summary>
        /// Gets or sets document status.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets document link.
        /// </summary>
        [JsonProperty(PropertyName = "document_link")]
        public string DocumentLink { get; set; }

        /// <summary>
        /// Gets or sets events link.
        /// </summary>
        [JsonProperty(PropertyName = "events_link")]
        public string EventsLink { get; set; }

        /// <summary>
        /// Gets or sets format code.
        /// </summary>
        [JsonProperty(PropertyName = "format_code")]
        public string FormatCode { get; set; }

        /// <summary>
        /// Gets or sets format code name.
        /// </summary>
        [JsonProperty(PropertyName = "format_code_name")]
        public string FormatCodeName { get; set; }

        /// <summary>
        /// Gets or sets IHI.
        /// </summary>
        [JsonProperty(PropertyName = "ihi")]
        public string Ihi { get; set; }

    }
}
